# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Category {
  active: Boolean
  children: [Category!]
  description: String
  id: Int!
  name: String
  parentId: Int
}

type City {
  """Активне не активне місто true/false"""
  active: Boolean
  id: Int!

  """Широта"""
  lat: Float

  """Довгота"""
  lng: Float

  """Назва міста"""
  name: String
}

input CreatePermissionInput {
  active: Boolean
  allowedCreate: Boolean!
  allowedDelete: Boolean!
  allowedGetAll: Boolean!
  allowedGetOne: Boolean!
  allowedUpdate: Boolean!
  resource: String!
}

type Mutation {
  createCategory(active: Boolean, description: String, name: String!, parentId: Int): Category!
  createCity(
    active: Boolean
    lat: Float
    lng: Float

    """Назва міста."""
    name: String!
  ): City!
  createRole(active: Boolean, name: String!, permissions: [CreatePermissionInput!]!): Role!
  createUser(active: Boolean, cityId: Int!, email: String!, middleName: String!, name: String!, password: String!, phone: String!, placeId: Int!, positionid: Int!, roleId: Int!, surname: String!): User!
  deleteCity(id: Int!): Boolean!
  deleteRole(id: Int!): Role!
  deleteUser(id: Int!): User!
  removeCategory(id: Int!): Category!
  updateCategory(active: Boolean, description: String, id: Int!, name: String, parentId: Int): Category!
  updateCity(
    active: Boolean
    id: Int!
    lat: Float
    lng: Float

    """Назва міста."""
    name: String
  ): Boolean!
  updateRole(active: Boolean, id: Int!, name: String, permissions: [UpdatePermissionInput!]): Role!
  updateUser(active: Boolean, cityId: Int, email: String, id: Int!, middleName: String, name: String, password: String, phone: String, placeId: Int, positionid: Int, roleId: Int, surname: String): User!
}

type Permission {
  active: Boolean
  allowedCreate: Boolean
  allowedDelete: Boolean
  allowedGetAll: Boolean
  allowedGetOne: Boolean
  allowedUpdate: Boolean
  id: Int!
  resource: String
}

type Query {
  categories: [Category!]!
  category(id: Int!): Category!
  cities: [City!]!
  city(id: Int!): City!
  role(id: Int!): Role!
  roles: [Role!]!
  typeRequest: [TypesRequest!]!
  user(id: Int!): User!
  users: [User!]!
}

type Role {
  active: Boolean
  id: Int!
  name: String
  permissions: [Permission!]!
}

type TypesRequest {
  description: String
  key: String!
  name: String
}

input UpdatePermissionInput {
  active: Boolean
  allowedCreate: Boolean!
  allowedDelete: Boolean!
  allowedGetAll: Boolean!
  allowedGetOne: Boolean!
  allowedUpdate: Boolean!
  id: Int!
  resource: String!
}

type User {
  active: Boolean
  city: City
  email: String

  """Example field (placeholder)"""
  id: Int!
  middleName: String
  name: String
  phone: String
  role: Role
  surname: String
}